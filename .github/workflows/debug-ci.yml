name: Debug CI
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        compiler:
          - name: GCC
            derivation: '.#debugGCC'
            report: gcc-report.xml
          - name: Clang
            derivation: '.#debugClangCov'
            report: clang-report.xml
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: cachix/install-nix-action@v27
        with:
          install_url: https://releases.nixos.org/nix/nix-2.23.3/install
          github_access_token: "${{ secrets.CI_BUILD_TOKEN }}"
      - name: Set Git credentials
        run: |
          git config --global 'url.https://api@github.com/'.insteadOf 'https://github.com/'
          git config --global 'url.https://ssh@github.com/'.insteadOf 'ssh://git@github.com/'
          git config --global 'url.https://git@github.com/'.insteadOf 'git@github.com:'
          echo 'echo "$CI_BOT_PAT"' > ~/.git-askpass
          chmod 500 ~/.git-askpass
          git config --global core.askPass "$HOME"/.git-askpass
      - uses: cachix/cachix-action@v15
        with:
          name: veridise-private
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          pushFilter: '(-source$)'
      - name: 'Build with ${{ matrix.compiler.name }}'
        run: "nix --print-build-logs build '${{ matrix.compiler.derivation }}'"
        env:
          CI_BOT_PAT: "${{ secrets.CI_BUILD_TOKEN }}"
      - name: Upload test results 
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "Test results (${{ matrix.compiler.name }})"
          path: "result/artifacts/${{ matrix.compiler.report }}"
      - name: Clear Git credentials
        if: "${{ always() }}"
        run: rm -rf "~/.git-askpass"
   
  publish-tests:
    name: "Publish test results"
    needs: build 
    runs-on: ubuntu-24.04
    if: always()
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: artifacts/**/*.xml
          comment_mode: failures


