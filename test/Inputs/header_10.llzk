// Imported via `include_pass.llzk`

module attributes {veridise.lang = "llzk"} {
  include.from "Inputs/header_8.llzk" as @libB

  struct.def @StructB {
    struct.field @x : !struct.struct<@libB::@libC::@StructC>
    function.def @compute() -> !struct.struct<@StructB> {
      %self = struct.new : !struct.struct<@StructB>
      %0 = function.call @libB::@libC::@StructC::@compute() : () -> (!struct.struct<@libB::@libC::@StructC>)
      struct.writef %self[@x] = %0 : !struct.struct<@StructB>, !struct.struct<@libB::@libC::@StructC>
      function.return %self : !struct.struct<@StructB>
    }
    function.def @constrain(%self: !struct.struct<@StructB>) {
      function.return
    }
  }
}
