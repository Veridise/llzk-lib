// RUN: zkir-opt -split-input-file %s 2>&1 | FileCheck %s

zkir.func @arr_constant_index() -> index {
  %a = index.constant 45
  %b = index.constant 214
  %c = index.constant 2
  %r = zkir.new_array %a, %b, %c : !zkir.array<3 x index>
  %i = zkir.readarr %r[%c] : !zkir.array<3 x index>, index
  return %i: index
}
//CHECK-LABEL:  zkir.func @arr_constant_index() -> index {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = index.constant 45
//CHECK-NEXT:     %[[T2:[0-9a-zA-Z_\.]+]] = index.constant 214
//CHECK-NEXT:     %[[T3:[0-9a-zA-Z_\.]+]] = index.constant 2
//CHECK-NEXT:     %[[T4:[0-9a-zA-Z_\.]+]] = new_array %[[T1]], %[[T2]], %[[T3]] : <3 x index>
//CHECK-NEXT:     %[[T5:[0-9a-zA-Z_\.]+]] = readarr %[[T4]][%[[T3]]] : <3 x index>, index
//CHECK-NEXT:     return %[[T5]] : index
//CHECK-NEXT:   }
// -----

zkir.func @arr_mix_index(%a: index, %b: index) -> index {
  %c = index.constant 324
  %d = index.constant 999 
  %i = index.constant 0
  %r = zkir.new_array %a, %b, %c, %d: !zkir.array<4 x index>
  %v = zkir.readarr %r[%i] : !zkir.array<4 x index>, index
  return %v: index
}
//CHECK-LABEL:  zkir.func @arr_mix_index
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: index, %[[A1:[0-9a-zA-Z_\.]+]]: index) -> index {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = index.constant 324
//CHECK-NEXT:     %[[T2:[0-9a-zA-Z_\.]+]] = index.constant 999
//CHECK-NEXT:     %[[I:[0-9a-zA-Z_\.]+]] = index.constant 0
//CHECK-NEXT:     %[[T3:[0-9a-zA-Z_\.]+]] = new_array %[[A0]], %[[A1]], %[[T1]], %[[T2]] : <4 x index>
//CHECK-NEXT:     %[[T4:[0-9a-zA-Z_\.]+]] = readarr %[[T3]][%[[I]]] : <4 x index>, index
//CHECK-NEXT:     return %[[T4]] : index
//CHECK-NEXT:   }
// -----

zkir.func @arr_arr_mix_index(%a: !zkir.array<3 x index>) -> !zkir.array<3 x index> {
  %c = index.constant 343245
  %d = index.constant 345
  %e = index.constant 2344
  %b = zkir.new_array %e, %c, %d: !zkir.array<3 x index>
  %i = index.constant 1
  %r = zkir.new_array %a, %b: !zkir.array<2 x !zkir.array<3 x index>>
  %f = zkir.readarr %r[%i] : !zkir.array<2 x !zkir.array<3 x index>>, !zkir.array<3 x index>
  return %f: !zkir.array<3 x index>
}
//CHECK-LABEL:  zkir.func @arr_arr_mix_index
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.array<3 x index>) -> !zkir.array<3 x index> {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = index.constant 343245
//CHECK-NEXT:     %[[T2:[0-9a-zA-Z_\.]+]] = index.constant 345
//CHECK-NEXT:     %[[T3:[0-9a-zA-Z_\.]+]] = index.constant 2344
//CHECK-NEXT:     %[[T4:[0-9a-zA-Z_\.]+]] = new_array %[[T3]], %[[T1]], %[[T2]] : <3 x index>
//CHECK-NEXT:     %[[I:[0-9a-zA-Z_\.]+]] = index.constant 1
//CHECK-NEXT:     %[[T5:[0-9a-zA-Z_\.]+]] = new_array %[[A0]], %[[T4]] : <2 x !zkir.array<3 x index>>
//CHECK-NEXT:     %[[T6:[0-9a-zA-Z_\.]+]] = readarr %[[T5]][%[[I]]] : <2 x !zkir.array<3 x index>>, !zkir.array<3 x index>
//CHECK-NEXT:     return %[[T6]] : !zkir.array<3 x index>
//CHECK-NEXT:   }


