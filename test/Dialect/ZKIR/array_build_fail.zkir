// RUN: zkir-opt %s -split-input-file -verify-diagnostics

zkir.func @constant_scalar_mismatch() {
  %a = zkir.constfelt 6744573456376
  %b = index.constant 2 // expected-note {{prior use here}}
  // expected-error@+1 {{use of value '%b' expects different type than prior uses: '!zkir.felt' vs 'index'}}
  %r = zkir.new_array %a, %b : !zkir.array<2 x !zkir.felt>
}

// -----

zkir.func @param_scalar_mismatch(
      %a: !zkir.felt,
      %b: !zkir.felt,
      %c: index // expected-note {{prior use here}}
      ) {
  // expected-error@+1 {{use of value '%c' expects different type than prior uses: '!zkir.felt' vs 'index'}}
  %r = zkir.new_array %a, %b, %c: !zkir.array<3 x !zkir.felt>
}

// -----

zkir.func @arr_type_mismatch(
      %a: index,
      %b: !zkir.felt // expected-note {{prior use here}}
      ) {
  // expected-error@+1 {{use of value '%b' expects different type than prior uses: 'index' vs '!zkir.felt'}}
  %r = zkir.new_array %a, %b: !zkir.array<2 x index>>
}

// -----

zkir.func @mismatch_to_type_attr(
      %a: !zkir.array<3 x index>, // expected-note {{prior use here}}
      %b: !zkir.felt
      ) {
  %c = index.constant 324
  // expected-error@+1 {{use of value '%a' expects different type than prior uses: 'index' vs '!zkir.array<3 x index>'}}
  %r = zkir.new_array %a, %b, %c: !zkir.array<3 x index>
}

// -----

zkir.func @inner_array_type_mismatch_to_type_attr(
      %a: !zkir.array<3 x !zkir.felt>, // expected-note {{prior use here}}
      %b: !zkir.array<3 x !zkir.felt>
      ) {
  // expected-error@+1 {{use of value '%a' expects different type than prior uses: 'index' vs '!zkir.array<3 x !zkir.felt>'}}
  %r = zkir.new_array %a, %b: !zkir.array<2 x index>
}

// -----

zkir.func @mismatch_to_type_attr_size() {
  %a = zkir.constfelt 6744573456376
  %b = zkir.constfelt 381928390103509
  // expected-error@+1 {{custom op 'zkir.new_array' 2 operands present, but expected 3}}
  %r = zkir.new_array %a, %b : !zkir.array<3 x !zkir.felt>
}

// -----

zkir.func @multi_array_not_enough_values(%a: index, %b: index) -> !zkir.array<2x2 x index> {
  %c = index.constant 324
  // expected-error@+1 {{custom op 'zkir.new_array' 3 operands present, but expected 4}}
  %r = zkir.new_array %a, %b, %c: !zkir.array<2x2 x index>
  return %r: !zkir.array<2x2 x index>
}
// -----

zkir.func @multi_array_too_many_values(%a: index, %b: index) -> !zkir.array<2x2 x index> {
  %c = index.constant 324
  %d = index.constant 999
  %e = index.constant 879
  // expected-error@+1 {{custom op 'zkir.new_array' 5 operands present, but expected 4}}
  %r = zkir.new_array %a, %b, %c, %d, %e: !zkir.array<2x2 x index>
  return %r: !zkir.array<2x2 x index>
}
// -----
