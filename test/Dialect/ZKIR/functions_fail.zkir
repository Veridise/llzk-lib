// RUN: zkir-opt -split-input-file -verify-diagnostics %s

// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found 'i32'}}
zkir.func private @fail_01(i32)
// -----
// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found 'i32'}}
zkir.func private @fail_02(i1) -> i32
// -----
// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found 'i32'}}
zkir.func private @fail_03(i1) -> (i32, i32)
// -----
// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found 'i32'}}
zkir.func private @fail_04(i1, index, i32)
// -----
// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found 'none'}}
zkir.func @fail_05(%x: i1) -> none {
  return
}
// -----
// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found '(i1) -> i32'}}
zkir.func @fail_06(%x: (i1) -> i32) -> index {
  return
}
// -----
zkir.func @fail_07() {
  // expected-error@+1 {{'zkir.func' op expects parent op to be one of 'builtin.module, zkir.struct'}}
  zkir.func @inner() {
    return
  }
  return
}
// -----
module attributes {veridise.lang = "zkir"} {
  zkir.func @user() {
    // expected-error@+2 {{'zkir.call' op references unknown symbol "@missing_fn"}}
    // expected-error@+1 {{no 'zkir.func' named "@missing_fn"}}
    zkir.call @missing_fn() : () -> ()
    return
  }
}
// -----
module { // expected-note {{unnamed 'builtin.module' here}}
  zkir.func @user() {
    // expected-error@+2 {{'zkir.call' op has ancestor 'builtin.module' without "veridise.lang" attribute or a name}}
    // expected-error@+1 {{no 'zkir.func' named "@missing_fn"}}
    zkir.call @missing_fn() : () -> ()
    return
  }
}
// -----
module attributes {veridise.lang = "zkir"} {
  // expected-error@+2 {{'zkir.func' op references unknown symbol "@WasNotDefined"}}
  // expected-error@+1 {{no 'zkir.struct' named "@WasNotDefined"}}
  zkir.func @constrain(%p: !zkir.struct<@WasNotDefined>) {
    return
  }
}
// -----
module { // expected-note {{unnamed 'builtin.module' here}}
  // expected-error@+2 {{'zkir.func' op has ancestor 'builtin.module' without "veridise.lang" attribute or a name}}
  // expected-error@+1 {{no 'zkir.struct' named "@MissingComponent"}}
  zkir.func @constrain(%p: !zkir.struct<@MissingComponent>) {
    return
  }
}
// -----
module attributes {veridise.lang = "zkir"} {
  // expected-error@+2 {{'zkir.func' op references unknown symbol "@WasNotDefined"}}
  // expected-error@+1 {{no 'zkir.struct' named "@WasNotDefined"}}
  zkir.func @f(%0: i1, %1: i1, %2: i1, %3: i1, %4: i1, %5: i1, %6: i1, %7: !zkir.struct<@WasNotDefined>) {
    return
  }
}
// -----
module attributes {veridise.lang = "zkir"} {
  // expected-error@+2 {{'zkir.func' op references unknown symbol "@WasNotDefined"}}
  // expected-error@+1 {{no 'zkir.struct' named "@WasNotDefined"}}
  zkir.func private @f(%0: i1, %1: i1, %2: i1, %3: i1, %4: i1, %5: i1, %6: i1) -> !zkir.struct<@WasNotDefined>
}
// -----
module attributes {veridise.lang = "zkir"} {
  // expected-error@+2 {{'zkir.func' op references unknown symbol "@WasNotDefined"}}
  // expected-error@+1 {{no 'zkir.struct' named "@WasNotDefined"}}
  zkir.func private @f(%0: i1, %1: i1, %2: i1, %3: i1, %4: i1, %5: i1, %6: i1) -> (!zkir.felt, i1, !zkir.struct<@WasNotDefined>)
}
// -----
module attributes {veridise.lang = "zkir"} {
  // expected-error@+8 {{'zkir.func' op references unknown symbol "@A"}}
  // expected-error@+7 {{no 'zkir.struct' named "@A"}}
  // expected-error@+6 {{'zkir.func' op references unknown symbol "@B"}}
  // expected-error@+5 {{no 'zkir.struct' named "@B"}}
  // expected-error@+4 {{'zkir.func' op references unknown symbol "@C"}}
  // expected-error@+3 {{no 'zkir.struct' named "@C"}}
  // expected-error@+2 {{'zkir.func' op references unknown symbol "@D"}}
  // expected-error@+1 {{no 'zkir.struct' named "@D"}}
  zkir.func private @f(%1: !zkir.struct<@A>, %7: !zkir.struct<@B>) -> (!zkir.struct<@C>, !zkir.struct<@D>)
}
