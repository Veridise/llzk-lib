// RUN: zkir-opt -split-input-file -verify-diagnostics %s

// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found 'i32'}}
zkir.func private @fail_01(i32)
// -----
// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found 'i32'}}
zkir.func private @fail_02(i1) -> i32
// -----
// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found 'i32'}}
zkir.func private @fail_03(i1) -> (i32, i32)
// -----
// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found 'i32'}}
zkir.func private @fail_04(i1, index, i32)
// -----
// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found 'none'}}
zkir.func @fail_05(%x: i1) -> none {
  return
}
// -----
// expected-error@+1 {{'zkir.func' op expected a valid ZKIR type but found '(i1) -> i32'}}
zkir.func @fail_06(%x: (i1) -> i32) -> index {
  return
}
// -----
zkir.func @fail_07() {
  // expected-error@+1 {{'zkir.func' op expects parent op to be one of 'builtin.module, zkir.struct'}}
  zkir.func @inner() {
    return
  }
  return
}
// -----
module attributes {veridise.lang = "zkir"} {
  zkir.func @user() {
    // expected-error@+2 {{'zkir.call' op references unknown symbol "@missing_fn"}}
    // expected-error@+1 {{no 'zkir.func' named "@missing_fn"}}
    zkir.call @missing_fn() : () -> ()
    return
  }
}
// -----
module { // expected-note {{unnamed 'builtin.module' here}}
  zkir.func @user() {
    // expected-error@+2 {{'zkir.call' op has ancestor 'builtin.module' without "veridise.lang" attribute or a name}}
    // expected-error@+1 {{no 'zkir.func' named "@missing_fn"}}
    zkir.call @missing_fn() : () -> ()
    return
  }
}
// -----
