// RUN: llzk-opt -split-input-file %s 2>&1 | FileCheck %s

module attributes {veridise.lang = "llzk"} {
  llzk.struct @Hello {
    func @compute() -> !llzk.struct<@Hello> {
      %self = new_struct : !llzk.struct<@Hello>
      return %self : !llzk.struct<@Hello>
    }
    func @constrain(%self: !llzk.struct<@Hello>) { return }
  }
  llzk.func private @a(!llzk.array<5 x !llzk.felt>, !llzk.struct<@Hello>)
}
//CHECK-LABEL:  llzk.func private @a(!llzk.array<5 x !llzk.felt>, !llzk.struct<@Hello>)
// -----

llzk.func private @b(!llzk.array<3x2x1 x !llzk.felt>)
//CHECK-LABEL:  llzk.func private @b(!llzk.array<3x2x1 x !llzk.felt>)
// -----

module attributes {veridise.lang = "llzk"} {
  llzk.struct @Bob {
    func @compute() -> !llzk.struct<@Bob> {
      %self = new_struct : !llzk.struct<@Bob>
      return %self : !llzk.struct<@Bob>
    }
    func @constrain(%self: !llzk.struct<@Bob>) { return }
  }
  llzk.func private @c(%x: !llzk.array<5 x !llzk.struct<@Bob>>) -> !llzk.array<5 x !llzk.struct<@Bob>>
}
//CHECK-LABEL:  llzk.func private @c(!llzk.array<5 x !llzk.struct<@Bob>>) -> !llzk.array<5 x !llzk.struct<@Bob>>
// -----

llzk.func private @d(%x: !llzk.array<54 x index>) -> index
//CHECK-LABEL:  llzk.func private @d(!llzk.array<54 x index>) -> index
// -----

llzk.func private @f(!llzk.felt) -> i1
//CHECK-LABEL:  llzk.func private @f(!llzk.felt) -> i1
// -----

llzk.func private @g(%x: !llzk.array<2x3x2 x index>)
//CHECK-LABEL:  llzk.func private @g(!llzk.array<2x3x2 x index>)
// -----
