// RUN: zkir-opt -split-input-file %s 2>&1 | FileCheck %s

// Field element basic arithmetic operations

zkir.func @f_constant() -> !zkir.felt {
  %c = zkir.constfelt 42
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_constant() -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = constfelt  42
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_add(%a: !zkir.felt, %b: !zkir.felt) -> !zkir.felt {
  %c = zkir.add %a, %b
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_add
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = add %[[A0]], %[[A1]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_sub(%a: !zkir.felt, %b: !zkir.felt) -> !zkir.felt {
  %c = zkir.sub %a, %b
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_sub
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = sub %[[A0]], %[[A1]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_mul(%a: !zkir.felt, %b: !zkir.felt) -> !zkir.felt {
  %c = zkir.mul %a, %b
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_mul
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = mul %[[A0]], %[[A1]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_div(%a: !zkir.felt, %b: !zkir.felt) -> !zkir.felt {
  %c = zkir.div %a, %b
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_div
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = div %[[A0]], %[[A1]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_mod(%a: !zkir.felt, %b: !zkir.felt) -> !zkir.felt {
  %c = zkir.mod %a, %b
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_mod
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = mod %[[A0]], %[[A1]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_neg(%a: !zkir.felt) -> !zkir.felt {
  %c = zkir.neg %a
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_neg
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = neg %[[A0]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_inv(%a: !zkir.felt) -> !zkir.felt {
  %c = zkir.inv %a
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_inv
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = inv %[[A0]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_and(%a: !zkir.felt, %b: !zkir.felt) -> !zkir.felt {
  %c = zkir.and %a, %b
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_and
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = and %[[A0]], %[[A1]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_or(%a: !zkir.felt, %b: !zkir.felt) -> !zkir.felt {
  %c = zkir.or %a, %b
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_or
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = or %[[A0]], %[[A1]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_xor(%a: !zkir.felt, %b: !zkir.felt) -> !zkir.felt {
  %c = zkir.xor %a, %b
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_xor
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = xor %[[A0]], %[[A1]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_not(%a: !zkir.felt) -> !zkir.felt {
  %c = zkir.not %a
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_not
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = not %[[A0]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_shl(%a: !zkir.felt, %b: !zkir.felt) -> !zkir.felt {
  %c = zkir.shl %a, %b
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_shl
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = shl %[[A0]], %[[A1]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_shr(%a: !zkir.felt, %b: !zkir.felt) -> !zkir.felt {
  %c = zkir.shr %a, %b
  return %c: !zkir.felt
}
//CHECK-LABEL:  zkir.func @f_shr
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> !zkir.felt {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = shr %[[A0]], %[[A1]]
//CHECK-NEXT:     return %[[T1]] : !zkir.felt
//CHECK-NEXT:   }
// -----

zkir.func @f_eq(%a: !zkir.felt, %b: !zkir.felt) -> i1 {
  %c = cmp eq(%a, %b)
  return %c: i1
}
//CHECK-LABEL:  zkir.func @f_eq
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> i1 {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = cmp eq(%[[A0]], %[[A1]])
//CHECK-NEXT:     return %[[T1]] : i1
//CHECK-NEXT:   }
// -----

zkir.func @f_ne(%a: !zkir.felt, %b: !zkir.felt) -> i1 {
  %c = cmp ne(%a, %b)
  return %c: i1
}
//CHECK-LABEL:  zkir.func @f_ne
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> i1 {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = cmp ne(%[[A0]], %[[A1]])
//CHECK-NEXT:     return %[[T1]] : i1
//CHECK-NEXT:   }
// -----

zkir.func @f_lt(%a: !zkir.felt, %b: !zkir.felt) -> i1 {
  %c = cmp lt(%a, %b)
  return %c: i1
}
//CHECK-LABEL:  zkir.func @f_lt
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> i1 {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = cmp lt(%[[A0]], %[[A1]])
//CHECK-NEXT:     return %[[T1]] : i1
//CHECK-NEXT:   }
// -----

zkir.func @f_le(%a: !zkir.felt, %b: !zkir.felt) -> i1 {
  %c = cmp le(%a, %b)
  return %c: i1
}
//CHECK-LABEL:  zkir.func @f_le
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> i1 {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = cmp le(%[[A0]], %[[A1]])
//CHECK-NEXT:     return %[[T1]] : i1
//CHECK-NEXT:   }
// -----

zkir.func @f_gt(%a: !zkir.felt, %b: !zkir.felt) -> i1 {
  %c = cmp gt(%a, %b)
  return %c: i1
}
//CHECK-LABEL:  zkir.func @f_gt
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> i1 {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = cmp gt(%[[A0]], %[[A1]])
//CHECK-NEXT:     return %[[T1]] : i1
//CHECK-NEXT:   }
// -----

zkir.func @f_ge(%a: !zkir.felt, %b: !zkir.felt) -> i1 {
  %c = cmp ge(%a, %b)
  return %c: i1
}
//CHECK-LABEL:  zkir.func @f_ge
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: !zkir.felt, %[[A1:[0-9a-zA-Z_\.]+]]: !zkir.felt) -> i1 {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = cmp ge(%[[A0]], %[[A1]])
//CHECK-NEXT:     return %[[T1]] : i1
//CHECK-NEXT:   }
// -----
