// RUN: zkir-opt -split-input-file %s 2>&1 | FileCheck %s

zkir.struct @ComponentA {
  func.func public @compute(%a: !zkir.felt) {
    return
  }

  func.func public @constrain(%a: !zkir.felt) {
    return
  }
}
//CHECK-LABEL:  zkir.struct @ComponentA {
//CHECK-NEXT:     func.func public @compute(%arg0: !zkir.felt) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:     func.func public @constrain(%arg0: !zkir.felt) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:   }
// -----

zkir.struct @ComponentB<[]> {
  func.func public @compute(%a: index) {
    return
  }

  func.func public @constrain(%a: index) {
    return
  }
}
//CHECK-LABEL:  zkir.struct @ComponentB<[]> {
//CHECK-NEXT:     func.func public @compute(%arg0: index) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:     func.func public @constrain(%arg0: index) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:   }
// -----

zkir.struct @ComponentC<[@A]> {
  func.func public @constrain(%a: !zkir.felt, %b: !zkir.felt) { return }
  func.func public @compute(%a: !zkir.felt, %b: !zkir.felt) { return }
}
//CHECK-LABEL:  zkir.struct @ComponentC<[@A]> {
//CHECK-NEXT:     func.func public @constrain(%arg0: !zkir.felt, %arg1: !zkir.felt) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:     func.func public @compute(%arg0: !zkir.felt, %arg1: !zkir.felt) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:   }
// -----

zkir.struct @ComponentD<[@B, @D, @C]> {
  func.func public @constrain(%a: !zkir.felt, %b: !zkir.felt) {
    return
  }

  func.func public @compute(%a: !zkir.felt, %b: !zkir.felt) {
    return
  }
}
//CHECK-LABEL:  zkir.struct @ComponentD<[@B, @D, @C]> {
//CHECK-NEXT:     func.func public @constrain(%arg0: !zkir.felt, %arg1: !zkir.felt) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:     func.func public @compute(%arg0: !zkir.felt, %arg1: !zkir.felt) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:   }
// -----

zkir.struct @ComponentE<[@B, @D, @C]> {
  zkir.field @f1 : !zkir.felt
  zkir.field @f2 : [#zkir.modifier<pub>, #zkir.modifier<const>] !zkir.felt

  func.func public @compute(%a: !zkir.felt, %b: !zkir.felt) {
    return
  }

  func.func public @constrain(%a: !zkir.felt, %b: !zkir.felt) {
    return
  }
}
//CHECK-LABEL:  zkir.struct @ComponentE<[@B, @D, @C]> {
//CHECK-NEXT:     zkir.field @f1 : !zkir.felt
//CHECK-NEXT:     zkir.field @f2 : [#zkir.modifier<pub>, #zkir.modifier<const>] !zkir.felt
//CHECK-NEXT:     func.func public @compute(%arg0: !zkir.felt, %arg1: !zkir.felt) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:     func.func public @constrain(%arg0: !zkir.felt, %arg1: !zkir.felt) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:   }
// -----

zkir.struct @ComponentF {
  zkir.field @f1 : !zkir.felt

  func.func public @constrain() { return }
  func.func public @compute() { return }
}

zkir.struct @ComponentG {
  zkir.field @f2 : !zkir.struct<@ComponentF>

  func.func public @compute() {
    %r = zkir.fref @f2[@f1] : !zkir.felt
    return
  }

  func.func public @constrain() {
    return
  }
}
//CHECK-LABEL: zkir.struct @ComponentF {
//CHECK-NEXT:    zkir.field @f1 : !zkir.felt
//CHECK-NEXT:    func.func public @constrain() {
//CHECK-NEXT:      return
//CHECK-NEXT:    }
//CHECK-NEXT:    func.func public @compute() {
//CHECK-NEXT:      return
//CHECK-NEXT:    }
//CHECK-NEXT:  }
//CHECK-LABEL: zkir.struct @ComponentG {
//CHECK-NEXT:    zkir.field @f2 : !zkir.struct<@ComponentF>
//CHECK-NEXT:    func.func public @compute() {
//CHECK-NEXT:      %0 = zkir.fref @f2[@f1] : !zkir.felt
//CHECK-NEXT:      return
//CHECK-NEXT:    }
//CHECK-NEXT:    func.func public @constrain() {
//CHECK-NEXT:      return
//CHECK-NEXT:    }
//CHECK-NEXT:  }
// -----

zkir.struct @ComponentH {
  func.func public @compute() { return }
  func.func public @constrain(%a: !zkir.felt) { return }
}

zkir.struct @ComponentI {
  zkir.field @f2 : !zkir.struct<@ComponentH>

  func.func public @compute() {
    return
  }

  func.func public @constrain() {
    %b = zkir.felt.nondet
    return
  }
}
//CHECK-LABEL:  zkir.struct @ComponentH {
//CHECK-NEXT:     func.func public @compute() {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:     func.func public @constrain(%arg0: !zkir.felt) {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:   }
//CHECK-LABEL:  zkir.struct @ComponentI {
//CHECK-NEXT:     zkir.field @f2 : !zkir.struct<@ComponentH>
//CHECK-NEXT:     func.func public @compute() {
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:     func.func public @constrain() {
//CHECK-NEXT:       %felt_nondet = zkir.felt.nondet
//CHECK-NEXT:       return
//CHECK-NEXT:     }
//CHECK-NEXT:   }
// -----
