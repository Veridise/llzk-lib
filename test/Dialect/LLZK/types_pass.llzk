// RUN: llzk-opt -split-input-file %s 2>&1 | FileCheck --enable-var-scope %s

module attributes {veridise.lang = "llzk"} {
  llzk.struct @Hello {
    function.def @compute() -> !llzk.struct<@Hello> {
      %self = new_struct : !llzk.struct<@Hello>
      function.return %self : !llzk.struct<@Hello>
    }
    function.def @constrain(%self: !llzk.struct<@Hello>) { function.return }
  }
  function.def private @a(!array.array<5 x !llzk.felt>, !llzk.struct<@Hello>)
}
//CHECK-LABEL:  function.def private @a(!array.array<5 x !llzk.felt>, !llzk.struct<@Hello>)
// -----

function.def private @b(!array.array<3,2,1 x !llzk.felt>)
//CHECK-LABEL:  function.def private @b(!array.array<3,2,1 x !llzk.felt>)
// -----

module attributes {veridise.lang = "llzk"} {
  llzk.struct @Bob {
    function.def @compute() -> !llzk.struct<@Bob> {
      %self = new_struct : !llzk.struct<@Bob>
      function.return %self : !llzk.struct<@Bob>
    }
    function.def @constrain(%self: !llzk.struct<@Bob>) { function.return }
  }
  function.def private @c(%x: !array.array<5 x !llzk.struct<@Bob>>) -> !array.array<5 x !llzk.struct<@Bob>>
}
//CHECK-LABEL:  function.def private @c(!array.array<5 x !llzk.struct<@Bob>>) -> !array.array<5 x !llzk.struct<@Bob>>
// -----

function.def private @d(%x: !array.array<54 x index>) -> index
//CHECK-LABEL:  function.def private @d(!array.array<54 x index>) -> index
// -----

function.def private @f(!llzk.felt) -> i1
//CHECK-LABEL:  function.def private @f(!llzk.felt) -> i1
// -----

function.def private @g(%x: !array.array<2,3,2 x index>)
//CHECK-LABEL:  function.def private @g(!array.array<2,3,2 x index>)
// -----

function.def private @h(%x: !llzk.string)
//CHECK-LABEL:  function.def private @h(!llzk.string)
// -----

function.def private @i(%x: !array.array<4 x !llzk.string>)
//CHECK-LABEL:  function.def private @i(!array.array<4 x !llzk.string>)
// -----

module attributes {veridise.lang = "llzk"} {
  llzk.struct @CJ {
    field @s : !llzk.string
    function.def @compute() -> !llzk.struct<@CJ> {
      %self = new_struct : !llzk.struct<@CJ>
      function.return %self : !llzk.struct<@CJ>
    }
    function.def @constrain(%self: !llzk.struct<@CJ>) { function.return }
  }
}
//CHECK-LABEL: llzk.struct @CJ {
//CHECK-NEXT:    field @s : !llzk.string
//CHECK-NEXT:    function.def @compute() -> !llzk.struct<@CJ> {
//CHECK-NEXT:      %[[SELF:[0-9a-zA-Z_\.]+]] = new_struct : <@CJ>
//CHECK-NEXT:      function.return %[[SELF]] : !llzk.struct<@CJ>
//CHECK-NEXT:    }
//CHECK-NEXT:    function.def @constrain(%[[SELF:[0-9a-zA-Z_\.]+]]: !llzk.struct<@CJ>) attributes {function.allow_constraints = #function.allow_constraints} {
//CHECK-NEXT:      function.return
//CHECK-NEXT:    }
//CHECK-NEXT:  }
