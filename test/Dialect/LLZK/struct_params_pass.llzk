// RUN: llzk-opt -split-input-file %s 2>&1 | FileCheck %s

module attributes {veridise.lang = "llzk"} {
  llzk.struct @ComponentA1<[@A, @B]> {
    func @compute() -> !llzk.struct<@ComponentA1> {
      %self = new_struct : !llzk.struct<@ComponentA1>
      return %self : !llzk.struct<@ComponentA1>
    }
    func @constrain(%self: !llzk.struct<@ComponentA1>) { return }
  }

  llzk.struct @ComponentA2<[@C]> {
    field @f2 : !llzk.struct<@ComponentA1<[5, @C]>>

    func @compute() -> !llzk.struct<@ComponentA2> {
      %self = new_struct : !llzk.struct<@ComponentA2>
      %x = call @ComponentA1::@compute() : () -> (!llzk.struct<@ComponentA1<[5, @C]>>)
      writef %self[@f2] = %x : !llzk.struct<@ComponentA2>, !llzk.struct<@ComponentA1<[5, @C]>>
      return %self : !llzk.struct<@ComponentA2>
    }

    func @constrain(%self: !llzk.struct<@ComponentA2>) {
      %b = readf %self[@f2] : !llzk.struct<@ComponentA2>, !llzk.struct<@ComponentA1<[5, @C]>>
      call @ComponentA1::@constrain(%b) : (!llzk.struct<@ComponentA1<[5, @C]>>) -> ()
      return
    }
  }

  llzk.struct @ComponentA3 {
    field @f3 : !llzk.struct<@ComponentA2<[43]>>

    func @compute() -> !llzk.struct<@ComponentA3> {
      %self = new_struct : !llzk.struct<@ComponentA3>
      %x = call @ComponentA2::@compute() : () -> (!llzk.struct<@ComponentA2<[43]>>)
      writef %self[@f3] = %x : !llzk.struct<@ComponentA3>, !llzk.struct<@ComponentA2<[43]>>
      return %self : !llzk.struct<@ComponentA3>
    }

    func @constrain(%self: !llzk.struct<@ComponentA3>) {
      %b = readf %self[@f3] : !llzk.struct<@ComponentA3>, !llzk.struct<@ComponentA2<[43]>>
      call @ComponentA2::@constrain(%b) : (!llzk.struct<@ComponentA2<[43]>>) -> ()
      return
    }
  }
}
//CHECK: ComponentA1
//TODO

// -----
module attributes {veridise.lang = "llzk"} {
  llzk.struct @ComponentB1<[@A]> {
    llzk.field @f1 : !llzk.felt {llzk.pub}

    func @compute() -> !llzk.struct<@ComponentB1> {
      %self = new_struct : !llzk.struct<@ComponentB1>
      return %self : !llzk.struct<@ComponentB1>
    }
    func @constrain(%self: !llzk.struct<@ComponentB1>) { return }
  }

  llzk.struct @ComponentB2<[@C]> {
    llzk.field @f2 : !llzk.felt 

    func @compute(%0: !llzk.struct<@ComponentB1<[@C]>>) -> !llzk.struct<@ComponentB2> {
      %self = new_struct : !llzk.struct<@ComponentB2>
      %a = readf %0[@f1] : !llzk.struct<@ComponentB1<[@C]>>, !llzk.felt
      writef %self[@f2] = %a : !llzk.struct<@ComponentB2>, !llzk.felt
      return %self : !llzk.struct<@ComponentB2>
    }

    func @constrain(%self: !llzk.struct<@ComponentB2>, %0: !llzk.struct<@ComponentB1<[@C]>>) {
      return
    }
  }
}
//CHECK: ComponentB1
//TODO
