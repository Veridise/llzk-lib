// RUN: llzk-opt %s -split-input-file -verify-diagnostics

function.def @string_to_index(
    %a: !string.string // expected-note {{prior use here}}
  ) -> index {
  // expected-error@+1 {{use of value '%a' expects different type than prior uses: '!felt.felt' vs '!string.string'}}
  %b = cast.toindex %a
  function.return %b: index
}
// -----

function.def @array_to_index(
    %a: !array.array<2 x !felt.felt> // expected-note {{prior use here}}
  ) -> index {
  // expected-error@+1 {{use of value '%a' expects different type than prior uses: '!felt.felt' vs '!array.array<2 x !felt.felt>'}}
  %b = cast.toindex %a
  function.return %b: index
}
// -----

function.def @index_to_index(
    %a: index // expected-note {{prior use here}}
  ) -> index {
  // expected-error@+1 {{use of value '%a' expects different type than prior uses: '!felt.felt' vs 'index'}}
  %b = cast.toindex %a
  function.return %b: index
}
// -----

function.def @i1_to_index(
    %a: i1 // expected-note {{prior use here}}
  ) -> index {
  // expected-error@+1 {{use of value '%a' expects different type than prior uses: '!felt.felt' vs 'i1'}}
  %b = cast.toindex %a
  function.return %b: index
}
// -----

module attributes {veridise.lang = "llzk"} {
  llzk.struct @C1 {
    function.def @compute() -> !llzk.struct<@C1> {
      %self = new_struct : !llzk.struct<@C1>
      function.return %self : !llzk.struct<@C1>
    }
    function.def @constrain(%self: !llzk.struct<@C1>) { function.return }
  }
  function.def @struct_to_index(
        %a: !llzk.struct<@C1> // expected-note {{prior use here}}
    ) -> index {
    // expected-error@+1 {{use of value '%a' expects different type than prior uses: '!felt.felt' vs '!llzk.struct<@C1>'}}
    %b = cast.toindex %a
    function.return %b: index
  }
}
// -----

function.def @string_to_felt(%a: !string.string) -> !felt.felt {
  // expected-error@+1 {{'cast.tofelt' op operand #0 must be 1-bit signless integer or index, but got '!string.string'}}
  %b = cast.tofelt %a : !string.string
  function.return %b: !felt.felt
}
// -----

function.def @array_to_felt(%a: !array.array<7 x i1>) -> !felt.felt {
  // expected-error@+1 {{'cast.tofelt' op operand #0 must be 1-bit signless integer or index, but got '!array.array<7 x i1>'}}
  %b = cast.tofelt %a : !array.array<7 x i1>
  function.return %b: !felt.felt
}
// -----

module attributes {veridise.lang = "llzk"} {
  llzk.struct @C2 {
    function.def @compute() -> !llzk.struct<@C2> {
      %self = new_struct : !llzk.struct<@C2>
      function.return %self : !llzk.struct<@C2>
    }
    function.def @constrain(%self: !llzk.struct<@C2>) { function.return }
  }
  function.def @struct_to_felt(%a: !llzk.struct<@C2>) -> !felt.felt {
    // expected-error@+1 {{'cast.tofelt' op operand #0 must be 1-bit signless integer or index, but got '!llzk.struct<@C2>'}}
    %b = cast.tofelt %a : !llzk.struct<@C2>
    function.return %b: !felt.felt
  }
}
// -----

function.def @check_type_restriction_on_pram(
    %a: i1 // expected-note {{prior use here}}
  ) -> !felt.felt {
  // expected-error@+1 {{use of value '%a' expects different type than prior uses: 'index' vs 'i1'}}
  %b = cast.tofelt %a : index
  function.return %b: !felt.felt
}
