// RUN: llzk-opt -split-input-file %s 2>&1 | FileCheck %s

llzk.func @arr_constant_index() -> !llzk.array<3 x index> {
  %a = index.constant 45
  %b = index.constant 214
  %c = index.constant 2
  %r = llzk.new_array %a, %b, %c : !llzk.array<3 x index>
  llzk.writearr %r[%c] = %b : !llzk.array<3 x index>, index
  return %r: !llzk.array<3 x index>
}
//CHECK-LABEL:  llzk.func @arr_constant_index() -> !llzk.array<3 x index> {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = index.constant 45
//CHECK-NEXT:     %[[T2:[0-9a-zA-Z_\.]+]] = index.constant 214
//CHECK-NEXT:     %[[T3:[0-9a-zA-Z_\.]+]] = index.constant 2
//CHECK-NEXT:     %[[T4:[0-9a-zA-Z_\.]+]] = new_array %[[T1]], %[[T2]], %[[T3]] : <3 x index>
//CHECK-NEXT:     writearr %[[T4]][%[[T3]]] = %[[T2]] : <3 x index>, index
//CHECK-NEXT:     return %[[T4]] : !llzk.array<3 x index>
//CHECK-NEXT:   }
// -----

llzk.func @arr_mix_index(%a: index, %b: index) -> !llzk.array<4 x index> {
  %c = index.constant 324
  %d = index.constant 999 
  %i = index.constant 0
  %r = llzk.new_array %a, %b, %c, %d: !llzk.array<4 x index>
  llzk.writearr %r[%i] = %b : !llzk.array<4 x index>, index
  return %r: !llzk.array<4 x index>
}
//CHECK-LABEL:  llzk.func @arr_mix_index
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: index, %[[A1:[0-9a-zA-Z_\.]+]]: index) -> !llzk.array<4 x index> {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = index.constant 324
//CHECK-NEXT:     %[[T2:[0-9a-zA-Z_\.]+]] = index.constant 999
//CHECK-NEXT:     %[[I:[0-9a-zA-Z_\.]+]] = index.constant 0
//CHECK-NEXT:     %[[T3:[0-9a-zA-Z_\.]+]] = new_array %[[A0]], %[[A1]], %[[T1]], %[[T2]] : <4 x index>
//CHECK-NEXT:     writearr %[[T3]][%[[I]]] = %[[A1]] : <4 x index>, index
//CHECK-NEXT:     return %[[T3]] : !llzk.array<4 x index>
//CHECK-NEXT:   }
// -----

llzk.func @arr_arr_mix_index(%a: index) -> !llzk.array<2,3 x index> {
  %c = index.constant 343245
  %d = index.constant 345
  %e = index.constant 2344
  %c1 = index.constant 41987
  %d1 = index.constant 547
  %e1 = index.constant 54795
  %i = index.constant 1
  %r = llzk.new_array %c, %d, %e, %c1, %d1, %e1: !llzk.array<2,3 x index>
  llzk.writearr %r[%i, %i] = %a : !llzk.array<2,3 x index>, index
  return %r: !llzk.array<2,3 x index>
}
//CHECK-LABEL:  llzk.func @arr_arr_mix_index
//CHECK-SAME:   (%[[A0:[0-9a-zA-Z_\.]+]]: index) -> !llzk.array<2,3 x index> {
//CHECK-NEXT:     %[[T1:[0-9a-zA-Z_\.]+]] = index.constant 343245
//CHECK-NEXT:     %[[T2:[0-9a-zA-Z_\.]+]] = index.constant 345
//CHECK-NEXT:     %[[T3:[0-9a-zA-Z_\.]+]] = index.constant 2344
//CHECK-NEXT:     %[[T5:[0-9a-zA-Z_\.]+]] = index.constant 41987
//CHECK-NEXT:     %[[T6:[0-9a-zA-Z_\.]+]] = index.constant 547
//CHECK-NEXT:     %[[T7:[0-9a-zA-Z_\.]+]] = index.constant 54795
//CHECK-NEXT:     %[[I:[0-9a-zA-Z_\.]+]] = index.constant 1
//CHECK-NEXT:     %[[T9:[0-9a-zA-Z_\.]+]] = new_array %[[T1]], %[[T2]], %[[T3]], %[[T5]], %[[T6]], %[[T7]] : <2,3 x index>
//CHECK-NEXT:     writearr %[[T9]][%[[I]], %[[I]]] = %[[A0]] : <2,3 x index>, index
//CHECK-NEXT:     return %[[T9]] : !llzk.array<2,3 x index>
//CHECK-NEXT:   }


