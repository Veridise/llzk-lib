// RUN: llzk-opt %s -split-input-file -verify-diagnostics

function.def @arr_constant_index() -> index {
  %a = arith.constant 45 : index // expected-note {{prior use here}}
  %b = arith.constant 214 : index
  %c = arith.constant 2 : index
  %r = array.new %a, %b, %c : !array.array<3 x index>
  // expected-error@+1 {{use of value '%a' expects different type than prior uses: '!array.array<3 x index>' vs 'index'}}
  %i = array.read %a[%c] : !array.array<3 x index>, index
  function.return %i: index
}
// -----

function.def @arr_mix_index(%a: index, %b: index) -> index {
  %c = arith.constant 324 : index
  %d = arith.constant 999 : index
  %i = arith.constant 0 : index
  %r = array.new %a, %b, %c, %d: !array.array<4 x index> // expected-note {{prior use here}}
  // expected-error@+1 {{use of value '%r' expects different type than prior uses: 'index' vs '!array.array<4 x index>'}}
  %v = array.read %r[%r] : !array.array<4 x index>, index
  function.return %v: index
}
// -----

function.def @arr_mix_index(%a: index, %b: index) -> index {
  %c = arith.constant 324 : index
  %d = arith.constant 999 : index
  %i = arith.constant 0 : index
  %f = felt.const 6744573456376 // expected-note {{prior use here}}
  %r = array.new %a, %b, %c, %d: !array.array<4 x index>
  // expected-error@+1 {{use of value '%f' expects different type than prior uses: 'index' vs '!felt.felt'}}
  %v = array.read %r[%f] : !array.array<4 x index>, index
  function.return %v: index
}
// -----

function.def @arr_wrong_array_elem_type(%a: !felt.felt) -> !array.array<1 x !felt.felt> {
  %i = arith.constant 0 : index
  %r = array.new %a: !array.array<1 x !felt.felt>
  // expected-error@+1 {{'array.read' op failed to verify that result type matches with arr_ref element type}}
  %v = array.read %r[%i] : !array.array<1 x !felt.felt>, index
  function.return %r: !array.array<1 x !felt.felt>
}

// -----

function.def @read_too_few_indices() -> index {
  %0 = arith.constant 0 : index
  %1 = arith.constant 1 : index

  %r = array.new : !array.array<2,4,3 x index>
  // expected-error@+1 {{'array.read' op has insufficient indexed dimensions: expected 3 but found 2}}
  %x = array.read %r[%1,%0] : !array.array<2,4,3 x index>, index
  function.return %x : index
}

// -----

function.def @read_too_many_indices() -> index {
  %0 = arith.constant 0 : index
  %1 = arith.constant 1 : index
  %2 = arith.constant 2 : index

  %r = array.new : !array.array<2,4,3 x index>
  // expected-error@+1 {{'array.read' op has too many indexed dimensions: expected 3 but found 4}}
  %x = array.read %r[%1,%0,%2,%0] : !array.array<2,4,3 x index>, index
  function.return %x : index
}
