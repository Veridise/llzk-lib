// RUN: llzk-opt -split-input-file -llzk-duplicate-read-write-elim -llzk-duplicate-op-elim -llzk-unused-declaration-elim="remove-structs" %s 2>&1 | FileCheck %s

module attributes {veridise.lang = "llzk"} {
  llzk.struct @Component {
    field @matrix : !llzk.array<7,3 x !llzk.felt>

    func @compute(%inputArr : !llzk.array<3 x !llzk.felt>) -> !llzk.struct<@Component> {
      %self = new_struct : !llzk.struct<@Component>
      return %self : !llzk.struct<@Component>
    }
    func @constrain(%self: !llzk.struct<@Component>, %inputArr : !llzk.array<3 x !llzk.felt>) {
      return
    }
  }
}

// CHECK-LABEL: module attributes {veridise.lang = "llzk"} {
// CHECK-NEXT: }

// -----

module attributes {veridise.lang = "llzk"} {
  llzk.struct @A {
    func @compute() -> !llzk.struct<@A> {
      %self = new_struct : !llzk.struct<@A>
      return %self : !llzk.struct<@A>
    }
    func @constrain(%self : !llzk.struct<@A>) {
      return
    }
  }

  llzk.struct @B {
    field @a : !llzk.struct<@A>
    func @compute() -> !llzk.struct<@B> {
      %self = new_struct : !llzk.struct<@B>
      return %self : !llzk.struct<@B>
    }
    func @constrain(%self : !llzk.struct<@B>) {
      %a = readf %self[@a] : !llzk.struct<@B>, !llzk.struct<@A>
      call @A::@constrain(%a) : (!llzk.struct<@A>) -> ()
      return
    }
  }

  llzk.struct @C {
    field @b : !llzk.struct<@B>
    func @compute() -> !llzk.struct<@C> {
      %self = new_struct : !llzk.struct<@C>
      return %self : !llzk.struct<@C>
    }
    func @constrain(%self : !llzk.struct<@C>) {
      %b = readf %self[@b] : !llzk.struct<@C>, !llzk.struct<@B>
      call @B::@constrain(%b) : (!llzk.struct<@B>) -> ()
      return
    }
  }

  llzk.struct @Main {
    field @c : !llzk.struct<@C>
    func @compute() -> !llzk.struct<@Main> {
      %self = new_struct : !llzk.struct<@Main>
      return %self : !llzk.struct<@Main>
    }
    func @constrain(%self : !llzk.struct<@Main>) {
      %c = readf %self[@c] : !llzk.struct<@Main>, !llzk.struct<@C>
      call @C::@constrain(%c) : (!llzk.struct<@C>) -> ()
      return
    }
  }
}

// CHECK-LABEL: module attributes {veridise.lang = "llzk"} {
// CHECK-NEXT:   llzk.struct @C {
// CHECK-NEXT:     func @compute() -> !llzk.struct<@C> {
// CHECK-NEXT:       %self = new_struct : <@C>
// CHECK-NEXT:       return %self : !llzk.struct<@C>
// CHECK-NEXT:     }
// CHECK-NEXT:     func @constrain(%arg0: !llzk.struct<@C>) {
// CHECK-NEXT:       return
// CHECK-NEXT:     }
// CHECK-NEXT:   }
// CHECK-NEXT:   llzk.struct @Main {
// CHECK-NEXT:     field @c : !llzk.struct<@C>
// CHECK-NEXT:     func @compute() -> !llzk.struct<@Main> {
// CHECK-NEXT:       %self = new_struct : <@Main>
// CHECK-NEXT:       return %self : !llzk.struct<@Main>
// CHECK-NEXT:     }
// CHECK-NEXT:     func @constrain(%arg0: !llzk.struct<@Main>) {
// CHECK-NEXT:       return
// CHECK-NEXT:     }
// CHECK-NEXT:   }
// CHECK-NEXT: }