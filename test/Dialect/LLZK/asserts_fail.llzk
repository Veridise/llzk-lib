// RUN: llzk-opt %s -split-input-file -verify-diagnostics

function.def @wrong_arg_type(
      %c: !felt.felt // expected-note {{prior use here}}
    ) -> !felt.felt {
  // expected-error@+1 {{use of value '%c' expects different type than prior uses: 'i1' vs '!felt.felt'}}
  assert %c
  function.return %c : !felt.felt
}
// -----

module attributes {veridise.lang = "llzk"} {
  llzk.struct @Component01<[@T]> {
    function.def @compute(
          %c: !llzk.tvar<@T> // expected-note {{prior use here}}
        ) -> !llzk.struct<@Component01<[@T]>> {
      %self = new_struct : !llzk.struct<@Component01<[@T]>>
      // I doubt there's any reason to support type variable used as the assert condition.
      // expected-error@+1 {{use of value '%c' expects different type than prior uses: 'i1' vs '!llzk.tvar<@T>'}}
      assert %c
      function.return %self : !llzk.struct<@Component01<[@T]>>
    }

    function.def @constrain(%self: !llzk.struct<@Component01<[@T]>>, %c: !llzk.tvar<@T>) {
      function.return
    }
  }
}
